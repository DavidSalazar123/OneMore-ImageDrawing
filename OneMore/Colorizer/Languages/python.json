{
  "name": "Python",
  "rules": [
    {
      // """ comment (start of multi-line)
      "pattern": "^[\\s]*(\\u0022{3}[^\\r\\n]*)$",
      "scope": "Comment",
      "captures": [
        "Comment"
      ]
    },
    {
      // comment """ (end of multi-line)
      "pattern": "^([^\\r\\n\\u0022]*\\u0022{3})[\\s]*$",
      "scope": "",
      "captures": [
        "Comment"
      ]
    },
    {
      // # comment
      "pattern": "(#[^\\r\\n]*)[]\\r\\n]?$",
      "captures": [
        "Comment"
      ]
    },
    {
      // 'string'
      "pattern": "('[^\\r\\n\\']*\\')",
      "captures": [
        "String"
      ]
    },
    {
      // "string"
      "pattern": "(\\u0022[^\\r\\n\\u0022]*\\u0022)",
      "captures": [
        "String"
      ]
    },
    {
      // keywords
      "pattern": "\\b(and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|False|finally|for|from|global|if|import|in|is|lambda|None|not|or|pass|print|raise|return|True|try|while|yield)\\b",
      "captures": [
        "Keyword"
      ]
    },
    {
      // 1234
      "pattern": "\\b([0-9]{1,})\\b",
      "captures": [
        "Number"
      ]
    }
  ]
}
